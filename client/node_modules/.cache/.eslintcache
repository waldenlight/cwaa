[{"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\index.js":"1","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\App.js":"2","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\SignupForm.js":"4","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\LoginForm.js":"5","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\auth.js":"6","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\mutations.js":"7","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\API.js":"8","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\localStorage.js":"9","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\AssignedClients.js":"10","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Main.js":"11","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Signup.js":"12","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Dashboard.js":"13","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\NewClientForm.js":"14"},{"size":266,"mtime":1698361122784,"results":"15","hashOfConfig":"16"},{"size":1750,"mtime":1698379838113,"results":"17","hashOfConfig":"16"},{"size":2447,"mtime":1698440907737,"results":"18","hashOfConfig":"16"},{"size":3467,"mtime":1698440758854,"results":"19","hashOfConfig":"16"},{"size":2772,"mtime":1698361122782,"results":"20","hashOfConfig":"16"},{"size":1234,"mtime":1698361122786,"results":"21","hashOfConfig":"16"},{"size":1119,"mtime":1698430070063,"results":"22","hashOfConfig":"16"},{"size":1378,"mtime":1698440457820,"results":"23","hashOfConfig":"16"},{"size":894,"mtime":1698361122786,"results":"24","hashOfConfig":"16"},{"size":3129,"mtime":1698371795290,"results":"25","hashOfConfig":"16"},{"size":3090,"mtime":1698381311163,"results":"26","hashOfConfig":"16"},{"size":5149,"mtime":1698381458442,"results":"27","hashOfConfig":"16"},{"size":3767,"mtime":1698440363345,"results":"28","hashOfConfig":"16"},{"size":4064,"mtime":1698432513325,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"k7role",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\index.js",[],[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\App.js",["80"],[],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AssignedClients from './pages/AssignedClients';\n\nimport Main from './pages/Main';\nimport Signup from './pages/Signup';\nimport Dashboard from './pages/Dashboard';\n\nimport Navbar from './components/Navbar';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport SignupForm from './components/SignupForm';\n\n// import Home from './pages/Home';\n// import Signup from './pages/Signup';\n// import Login from './pages/Login';\n// import Comment from './pages/Comment';\n// import Profile from './pages/Profile';\n// import Header from './components/Header';\n// import Footer from './components/Footer';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Main} />\n            <Route exact path='/Signup' component={Signup} />\n            <Route exact path='/Dashboard' component={Dashboard} />\n            <Route exact path='/Assigned' component={AssignedClients} />\n            <Route render={() => <h1 className='display-2'>404</h1>} />\n          </Switch>\n        </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n",[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\SignupForm.js",["81","82"],[],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\LoginForm.js",["83","84"],[],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { LOGIN_USER } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\auth.js",["85"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\API.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\localStorage.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\AssignedClients.js",["86","87","88","89","90","91"],[],"import React, { useState } from 'react';\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nimport { getMe, deleteClient } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeClientId } from '../utils/localStorage';\nimport { REMOVE_CLIENT } from '../utils/mutations';\nimport { useMutation, useQuery } from '@apollo/client';\n\n\nconst AssignedClients = () => {\n  const [userData, setUserData] = useQuery(REMOVE_CLIENT);\n  const [deleteClient, { error }] = useMutation(REMOVE_CLIENT);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  useQuery(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  const handleDeleteClient = async (clientId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteClient(clientId, token);\n\n      const { data } = deleteClient();\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      removeClientId(clientId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <div fluid className='text-light bg-dark p-5'>\n        <Container>\n          <h1>Assigned Clients</h1>\n        </Container>\n      </div>\n      <Container>\n        <h2 className='pt-5'>\n          {userData.assignedClients.length\n            ? `Viewing ${userData.assignedClients.length} assigned ${userData.assignedClients.length === 1 ? 'client' : 'clients'}:`\n            : 'You have no assigned clients'}\n        </h2>\n        <Row>\n          {userData.assignedClients.map((client) => {\n            return (\n              <Col md=\"4\">\n                <Card key={client.clientId} border='dark'>\n                  {client.image ? <Card.Img src={client.image} alt={`The cover for ${client.title}`} variant='top' /> : null}\n                  <Card.Body>\n                    <Card.Title>{client.title}</Card.Title>\n                    <p className='small'>Writers: {client.writers}</p>\n                    <Card.Text>{client.description}</Card.Text>\n                    {/* <Button className='btn-block btn-danger' onClick={() => handleDeleteClient(client.clientId)}>\n                      Drop Client\n                    </Button> */}\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default AssignedClients;\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Main.js",["92","93","94","95","96","97","98","99","100","101","102"],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Signup.js",["103","104","105","106","107","108","109","110"],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Dashboard.js",["111","112","113","114","115","116","117","118","119","120","121","122"],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\NewClientForm.js",["123","124"],[],"import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { createClient } from '../utils/API';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_CLIENT } from '../utils/mutations';\r\n\r\nconst NewClientForm = () => {\r\n    // set initial form state\r\n    const [clientFormData, setClientFormData] = useState({ name: '', email: '', description: '' });\r\n    // set state for form validation\r\n    const [validated] = useState(false);\r\n    // set state for alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addClient, { error }] = useMutation(ADD_CLIENT);\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setClientFormData({ ...clientFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // check if form has everything (as per react-bootstrap docs)\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const response = await createClient(clientFormData);\r\n\r\n            if (!response.ok) {\r\n                throw new Error('something went wrong!');\r\n            }\r\n\r\n            const { client } = await response.json();\r\n            console.log(client);\r\n            client.createClient(client)\r\n            // Auth.login(token);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setShowAlert(true);\r\n        }\r\n\r\n        setClientFormData({\r\n            name: '',\r\n            email: '',\r\n            description: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* This is needed for the validation functionality above */}\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                {/* show alert if server response is bad */}\r\n                <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n                    Something went wrong with your signup!\r\n                </Alert>\r\n\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Label htmlFor='name'>Client Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Client Name'\r\n                        name='name'\r\n                        onChange={handleInputChange}\r\n                        value={clientFormData.name}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type='invalid'>Client name is required!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Label htmlFor='email'>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Client email address'\r\n                        name='email'\r\n                        onChange={handleInputChange}\r\n                        value={clientFormData.email}\r\n                    />\r\n                    <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Label htmlFor='description'>Description</Form.Label>\r\n                    <Form.Control\r\n                        type='description'\r\n                        placeholder='Description'\r\n                        name='description'\r\n                        onChange={handleInputChange}\r\n                        value={clientFormData.description}\r\n                    />\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(clientFormData.name)}\r\n                    type='submit'\r\n                    variant='success'>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewClientForm;\r\n",{"ruleId":"125","severity":1,"message":"126","line":18,"column":8,"nodeType":"127","messageId":"128","endLine":18,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":17},{"ruleId":"125","severity":1,"message":"130","line":16,"column":21,"nodeType":"127","messageId":"128","endLine":16,"endColumn":26},{"ruleId":"125","severity":1,"message":"131","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":19},{"ruleId":"125","severity":1,"message":"130","line":14,"column":23,"nodeType":"127","messageId":"128","endLine":14,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":49,"column":1,"nodeType":"134","endLine":49,"endColumn":34},{"ruleId":"125","severity":1,"message":"135","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"136","line":5,"column":3,"nodeType":"127","messageId":"128","endLine":5,"endColumn":9},{"ruleId":"125","severity":1,"message":"137","line":10,"column":17,"nodeType":"127","messageId":"128","endLine":10,"endColumn":29},{"ruleId":"125","severity":1,"message":"130","line":19,"column":26,"nodeType":"127","messageId":"128","endLine":19,"endColumn":31},{"ruleId":"125","severity":1,"message":"138","line":49,"column":9,"nodeType":"127","messageId":"128","endLine":49,"endColumn":27},{"ruleId":"125","severity":1,"message":"139","line":59,"column":15,"nodeType":"127","messageId":"128","endLine":59,"endColumn":19},{"ruleId":"125","severity":1,"message":"135","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"140","line":4,"column":5,"nodeType":"127","messageId":"128","endLine":4,"endColumn":9},{"ruleId":"125","severity":1,"message":"136","line":5,"column":5,"nodeType":"127","messageId":"128","endLine":5,"endColumn":11},{"ruleId":"125","severity":1,"message":"141","line":6,"column":5,"nodeType":"127","messageId":"128","endLine":6,"endColumn":8},{"ruleId":"125","severity":1,"message":"142","line":7,"column":5,"nodeType":"127","messageId":"128","endLine":7,"endColumn":8},{"ruleId":"125","severity":1,"message":"143","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":20},{"ruleId":"125","severity":1,"message":"144","line":11,"column":8,"nodeType":"127","messageId":"128","endLine":11,"endColumn":12},{"ruleId":"125","severity":1,"message":"145","line":12,"column":10,"nodeType":"127","messageId":"128","endLine":12,"endColumn":21},{"ruleId":"125","severity":1,"message":"146","line":12,"column":23,"nodeType":"127","messageId":"128","endLine":12,"endColumn":31},{"ruleId":"125","severity":1,"message":"147","line":13,"column":10,"nodeType":"127","messageId":"128","endLine":13,"endColumn":18},{"ruleId":"125","severity":1,"message":"148","line":14,"column":10,"nodeType":"127","messageId":"128","endLine":14,"endColumn":23},{"ruleId":"125","severity":1,"message":"149","line":3,"column":5,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"140","line":4,"column":5,"nodeType":"127","messageId":"128","endLine":4,"endColumn":9},{"ruleId":"125","severity":1,"message":"141","line":6,"column":5,"nodeType":"127","messageId":"128","endLine":6,"endColumn":8},{"ruleId":"125","severity":1,"message":"142","line":7,"column":5,"nodeType":"127","messageId":"128","endLine":7,"endColumn":8},{"ruleId":"125","severity":1,"message":"146","line":14,"column":23,"nodeType":"127","messageId":"128","endLine":14,"endColumn":31},{"ruleId":"125","severity":1,"message":"148","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":23},{"ruleId":"125","severity":1,"message":"129","line":26,"column":12,"nodeType":"127","messageId":"128","endLine":26,"endColumn":19},{"ruleId":"125","severity":1,"message":"130","line":26,"column":23,"nodeType":"127","messageId":"128","endLine":26,"endColumn":28},{"ruleId":"125","severity":1,"message":"136","line":5,"column":5,"nodeType":"127","messageId":"128","endLine":5,"endColumn":11},{"ruleId":"125","severity":1,"message":"141","line":6,"column":5,"nodeType":"127","messageId":"128","endLine":6,"endColumn":8},{"ruleId":"125","severity":1,"message":"150","line":9,"column":5,"nodeType":"127","messageId":"128","endLine":9,"endColumn":8},{"ruleId":"125","severity":1,"message":"151","line":11,"column":10,"nodeType":"127","messageId":"128","endLine":11,"endColumn":14},{"ruleId":"125","severity":1,"message":"143","line":13,"column":10,"nodeType":"127","messageId":"128","endLine":13,"endColumn":20},{"ruleId":"125","severity":1,"message":"137","line":13,"column":22,"nodeType":"127","messageId":"128","endLine":13,"endColumn":34},{"ruleId":"125","severity":1,"message":"144","line":14,"column":8,"nodeType":"127","messageId":"128","endLine":14,"endColumn":12},{"ruleId":"125","severity":1,"message":"146","line":15,"column":23,"nodeType":"127","messageId":"128","endLine":15,"endColumn":31},{"ruleId":"125","severity":1,"message":"147","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":18},{"ruleId":"125","severity":1,"message":"152","line":17,"column":10,"nodeType":"127","messageId":"128","endLine":17,"endColumn":24},{"ruleId":"125","severity":1,"message":"153","line":24,"column":22,"nodeType":"127","messageId":"128","endLine":24,"endColumn":33},{"ruleId":"154","severity":1,"message":"155","line":97,"column":13,"nodeType":"156","endLine":97,"endColumn":73},{"ruleId":"125","severity":1,"message":"157","line":15,"column":12,"nodeType":"127","messageId":"128","endLine":15,"endColumn":21},{"ruleId":"125","severity":1,"message":"130","line":15,"column":25,"nodeType":"127","messageId":"128","endLine":15,"endColumn":30},"no-unused-vars","'SignupForm' is defined but never used.","Identifier","unusedVar","'addUser' is assigned a value but never used.","'error' is assigned a value but never used.","'loginUser' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'Button' is defined but never used.","'deleteClient' is defined but never used.","'handleDeleteClient' is assigned a value but never used.","'data' is assigned a value but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'createUser' is defined but never used.","'Auth' is defined but never used.","'useMutation' is defined but never used.","'useQuery' is defined but never used.","'ADD_USER' is defined but never used.","'REMOVE_CLIENT' is defined but never used.","'Container' is defined but never used.","'Tab' is defined but never used.","'Link' is defined but never used.","'removeClientId' is defined but never used.","'setUserData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'addClient' is assigned a value but never used."]