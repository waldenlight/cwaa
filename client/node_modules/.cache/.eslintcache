[{"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\index.js":"1","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\App.js":"2","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\AssignedClients.js":"3","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\SignupForm.js":"5","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\LoginForm.js":"6","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\auth.js":"7","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\mutations.js":"8","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\API.js":"9","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\localStorage.js":"10","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Main.js":"11"},{"size":266,"mtime":1698361122784,"results":"12","hashOfConfig":"13"},{"size":1441,"mtime":1698364431914,"results":"14","hashOfConfig":"13"},{"size":3129,"mtime":1698364325539,"results":"15","hashOfConfig":"13"},{"size":2343,"mtime":1698361122782,"results":"16","hashOfConfig":"13"},{"size":3467,"mtime":1698361122783,"results":"17","hashOfConfig":"13"},{"size":2772,"mtime":1698361122782,"results":"18","hashOfConfig":"13"},{"size":1234,"mtime":1698361122786,"results":"19","hashOfConfig":"13"},{"size":876,"mtime":1698361122787,"results":"20","hashOfConfig":"13"},{"size":1120,"mtime":1698361122785,"results":"21","hashOfConfig":"13"},{"size":894,"mtime":1698361122786,"results":"22","hashOfConfig":"13"},{"size":2194,"mtime":1698364227337,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k7role",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\index.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\App.js",["60"],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\AssignedClients.js",["61","62","63","64","65","66"],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\SignupForm.js",["67","68"],[],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\components\\LoginForm.js",["69","70"],[],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { LOGIN_USER } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [loginUser, { error }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group className='mb-3'>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\auth.js",["71"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\API.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\utils\\localStorage.js",[],[],"C:\\Users\\Walden Light\\Desktop\\cwaa\\cwaa\\client\\src\\pages\\Main.js",["72","73","74","75","76","77","78","79","80","81"],[],{"ruleId":"82","severity":1,"message":"83","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"87","line":5,"column":3,"nodeType":"84","messageId":"85","endLine":5,"endColumn":9},{"ruleId":"82","severity":1,"message":"88","line":10,"column":17,"nodeType":"84","messageId":"85","endLine":10,"endColumn":29},{"ruleId":"82","severity":1,"message":"89","line":19,"column":26,"nodeType":"84","messageId":"85","endLine":19,"endColumn":31},{"ruleId":"82","severity":1,"message":"90","line":49,"column":9,"nodeType":"84","messageId":"85","endLine":49,"endColumn":27},{"ruleId":"82","severity":1,"message":"91","line":59,"column":15,"nodeType":"84","messageId":"85","endLine":59,"endColumn":19},{"ruleId":"82","severity":1,"message":"92","line":16,"column":10,"nodeType":"84","messageId":"85","endLine":16,"endColumn":17},{"ruleId":"82","severity":1,"message":"89","line":16,"column":21,"nodeType":"84","messageId":"85","endLine":16,"endColumn":26},{"ruleId":"82","severity":1,"message":"93","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":19},{"ruleId":"82","severity":1,"message":"89","line":14,"column":23,"nodeType":"84","messageId":"85","endLine":14,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":49,"column":1,"nodeType":"96","endLine":49,"endColumn":34},{"ruleId":"82","severity":1,"message":"86","line":1,"column":17,"nodeType":"84","messageId":"85","endLine":1,"endColumn":25},{"ruleId":"82","severity":1,"message":"97","line":3,"column":5,"nodeType":"84","messageId":"85","endLine":3,"endColumn":14},{"ruleId":"82","severity":1,"message":"98","line":4,"column":5,"nodeType":"84","messageId":"85","endLine":4,"endColumn":9},{"ruleId":"82","severity":1,"message":"87","line":5,"column":5,"nodeType":"84","messageId":"85","endLine":5,"endColumn":11},{"ruleId":"82","severity":1,"message":"99","line":6,"column":5,"nodeType":"84","messageId":"85","endLine":6,"endColumn":8},{"ruleId":"82","severity":1,"message":"100","line":7,"column":5,"nodeType":"84","messageId":"85","endLine":7,"endColumn":8},{"ruleId":"82","severity":1,"message":"88","line":10,"column":17,"nodeType":"84","messageId":"85","endLine":10,"endColumn":29},{"ruleId":"82","severity":1,"message":"89","line":19,"column":28,"nodeType":"84","messageId":"85","endLine":19,"endColumn":33},{"ruleId":"82","severity":1,"message":"90","line":49,"column":11,"nodeType":"84","messageId":"85","endLine":49,"endColumn":29},{"ruleId":"82","severity":1,"message":"91","line":59,"column":21,"nodeType":"84","messageId":"85","endLine":59,"endColumn":25},"no-unused-vars","'Main' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Button' is defined but never used.","'deleteClient' is defined but never used.","'error' is assigned a value but never used.","'handleDeleteClient' is assigned a value but never used.","'data' is assigned a value but never used.","'addUser' is assigned a value but never used.","'loginUser' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Container' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used."]