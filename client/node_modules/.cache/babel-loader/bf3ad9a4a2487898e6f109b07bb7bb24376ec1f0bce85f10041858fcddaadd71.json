{"ast":null,"code":"// route to get logged in user's info (needs the token)\nexport const getMe = token => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const createUser = userData => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n};\nexport const loginUser = userData => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n};\nexport const assignClient = (clientData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(clientData)\n  });\n};\n\n// export const deleteClient = (clientId, token) => {\n//   return fetch(`/api/users/clients/${clientId}`, {\n//     method: 'DELETE',\n//     headers: {\n//       authorization: `Bearer ${token}`,\n//     },\n//   });\n// };","map":{"version":3,"names":["getMe","token","fetch","headers","authorization","createUser","userData","method","body","JSON","stringify","loginUser","assignClient","clientData"],"sources":["C:/Users/Walden Light/Desktop/cwaa/cwaa/client/src/utils/API.js"],"sourcesContent":["// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const assignClient = (clientData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(clientData),\n  });\n};\n\n// export const deleteClient = (clientId, token) => {\n//   return fetch(`/api/users/clients/${clientId}`, {\n//     method: 'DELETE',\n//     headers: {\n//       authorization: `Bearer ${token}`,\n//     },\n//   });\n// };"],"mappings":"AAAA;AACA,OAAO,MAAMA,KAAK,GAAIC,KAAK,IAAK;EAC9B,OAAOC,KAAK,CAAC,eAAe,EAAE;IAC5BC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASH,KAAM;IACjC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIC,QAAQ,IAAK;EACtC,OAAOJ,KAAK,CAAC,YAAY,EAAE;IACzBK,MAAM,EAAE,MAAM;IACdJ,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,SAAS,GAAIL,QAAQ,IAAK;EACrC,OAAOJ,KAAK,CAAC,kBAAkB,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdJ,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDK,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;EAC/B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,YAAY,GAAGA,CAACC,UAAU,EAAEZ,KAAK,KAAK;EACjD,OAAOC,KAAK,CAAC,YAAY,EAAE;IACzBK,MAAM,EAAE,KAAK;IACbJ,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASH,KAAM;IACjC,CAAC;IACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,UAAU;EACjC,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}