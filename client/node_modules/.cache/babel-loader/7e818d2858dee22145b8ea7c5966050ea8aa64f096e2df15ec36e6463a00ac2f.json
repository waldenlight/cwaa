{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Walden Light\\\\Desktop\\\\cwaa\\\\cwaa\\\\client\\\\src\\\\pages\\\\AssignedClients.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\n\n// import { getMe, deleteClient } from '../utils/API';\nimport Auth from '../utils/auth';\n// import { removeClientId } from '../utils/localStorage';\nimport { REMOVE_CLIENT } from '../utils/mutations';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AssignedClients = () => {\n  _s();\n  const [userData, setUserData] = useQuery(REMOVE_CLIENT);\n  const [deleteClient, {\n    error\n  }] = useMutation(REMOVE_CLIENT);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n  useQuery(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n        if (!token) {\n          return false;\n        }\n        const response = await getMe(token);\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getUserData();\n  }, [userDataLength]);\n  const handleDeleteClient = async clientId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const response = await deleteClient(clientId, token);\n      const {\n        data\n      } = deleteClient();\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      removeClientId(clientId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark p-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Assigned Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pt-5\",\n        children: userData.assignedClients.length ? `Viewing ${userData.assignedClients.length} saved ${userData.assignedClients.length === 1 ? 'client' : 'clients'}:` : 'You have no assigned clients'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: userData.savedClients.map(client => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [client.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: client.image,\n                alt: `The cover for ${client.title}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 35\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: client.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Writers: \", client.writers]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: client.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, client.clientId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AssignedClients, \"rJhA59zDZ93nNp80tkm6gDcgAl0=\", false, function () {\n  return [useQuery, useMutation, useQuery];\n});\n_c = AssignedClients;\nexport default SavedClients;\nvar _c;\n$RefreshReg$(_c, \"AssignedClients\");","map":{"version":3,"names":["React","useState","Container","Card","Button","Row","Col","Auth","REMOVE_CLIENT","useMutation","useQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","AssignedClients","_s","userData","setUserData","deleteClient","error","userDataLength","Object","keys","length","getUserData","token","loggedIn","getToken","response","getMe","ok","Error","user","json","err","console","handleDeleteClient","clientId","data","updatedUser","removeClientId","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","assignedClients","savedClients","map","client","md","border","image","Img","src","alt","title","variant","Body","Title","writers","Text","description","_c","SavedClients","$RefreshReg$"],"sources":["C:/Users/Walden Light/Desktop/cwaa/cwaa/client/src/pages/AssignedClients.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Card,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\n// import { getMe, deleteClient } from '../utils/API';\nimport Auth from '../utils/auth';\n// import { removeClientId } from '../utils/localStorage';\nimport { REMOVE_CLIENT } from '../utils/mutations';\nimport { useMutation, useQuery } from '@apollo/client';\n\n\nconst AssignedClients = () => {\n  const [userData, setUserData] = useQuery(REMOVE_CLIENT);\n  const [deleteClient, { error }] = useMutation(REMOVE_CLIENT);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  useQuery(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  const handleDeleteClient = async (clientId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteClient(clientId, token);\n\n      const { data } = deleteClient();\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      removeClientId(clientId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <div fluid className='text-light bg-dark p-5'>\n        <Container>\n          <h1>Assigned Clients</h1>\n        </Container>\n      </div>\n      <Container>\n        <h2 className='pt-5'>\n          {userData.assignedClients.length\n            ? `Viewing ${userData.assignedClients.length} saved ${userData.assignedClients.length === 1 ? 'client' : 'clients'}:`\n            : 'You have no assigned clients'}\n        </h2>\n        <Row>\n          {userData.savedClients.map((client) => {\n            return (\n              <Col md=\"4\">\n                <Card key={client.clientId} border='dark'>\n                  {client.image ? <Card.Img src={client.image} alt={`The cover for ${client.title}`} variant='top' /> : null}\n                  <Card.Body>\n                    <Card.Title>{client.title}</Card.Title>\n                    <p className='small'>Writers: {client.writers}</p>\n                    <Card.Text>{client.description}</Card.Text>\n                    {/* <Button className='btn-block btn-danger' onClick={() => handleDeleteClient(client.clientId)}>\n                      Drop Client\n                    </Button> */}\n                  </Card.Body>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedClients;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}