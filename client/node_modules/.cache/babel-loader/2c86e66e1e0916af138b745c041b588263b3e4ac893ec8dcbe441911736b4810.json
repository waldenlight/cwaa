{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Walden Light\\\\Desktop\\\\cwaa\\\\cwaa\\\\client\\\\src\\\\components\\\\NewClientForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { createClient } from '../utils/API';\nimport { useMutation } from '@apollo/client';\nimport { ADD_CLIENT } from '../utils/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewClientForm = () => {\n  _s();\n  // set initial form state\n  const [clientFormData, setClientFormData] = useState({\n    name: '',\n    email: '',\n    description: ''\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const [addClient, {\n    error\n  }] = useMutation(ADD_CLIENT);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setClientFormData({\n      ...clientFormData,\n      [name]: value\n    });\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    try {\n      const response = await createClient(clientFormData);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const {\n        client\n      } = await response.json();\n      console.log(client);\n      // Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n    setClientFormData({\n      name: '',\n      email: '',\n      description: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        dismissible: true,\n        onClose: () => setShowAlert(false),\n        show: showAlert,\n        variant: \"danger\",\n        children: \"Something went wrong with your signup!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"name\",\n          children: \"Client Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Client Name\",\n          name: \"name\",\n          onChange: handleInputChange,\n          value: clientFormData.name,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Client name is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Client email address\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: clientFormData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Email is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"description\",\n          placeholder: \"Description\",\n          name: \"description\",\n          onChange: handleInputChange,\n          value: clientFormData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(clientFormData.name && clientFormData.email && clientFormData.description),\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NewClientForm, \"scg9JsnzX3pEPj+J7Q0T7KQGYQY=\", false, function () {\n  return [useMutation];\n});\n_c = NewClientForm;\nexport default NewClientForm;\nvar _c;\n$RefreshReg$(_c, \"NewClientForm\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","createClient","useMutation","ADD_CLIENT","jsxDEV","_jsxDEV","Fragment","_Fragment","NewClientForm","_s","clientFormData","setClientFormData","name","email","description","validated","showAlert","setShowAlert","addClient","error","handleInputChange","event","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","response","ok","Error","client","json","console","log","err","children","noValidate","onSubmit","dismissible","onClose","show","variant","fileName","_jsxFileName","lineNumber","columnNumber","Group","className","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Walden Light/Desktop/cwaa/cwaa/client/src/components/NewClientForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { createClient } from '../utils/API';\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_CLIENT } from '../utils/mutations';\r\n\r\nconst NewClientForm = () => {\r\n    // set initial form state\r\n    const [clientFormData, setClientFormData] = useState({ name: '', email: '', description: '' });\r\n    // set state for form validation\r\n    const [validated] = useState(false);\r\n    // set state for alert\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addClient, { error }] = useMutation(ADD_CLIENT);\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setClientFormData({ ...clientFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        // check if form has everything (as per react-bootstrap docs)\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const response = await createClient(clientFormData);\r\n\r\n            if (!response.ok) {\r\n                throw new Error('something went wrong!');\r\n            }\r\n\r\n            const { client } = await response.json();\r\n            console.log(client);\r\n            // Auth.login(token);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setShowAlert(true);\r\n        }\r\n\r\n        setClientFormData({\r\n            name: '',\r\n            email: '',\r\n            description: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* This is needed for the validation functionality above */}\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                {/* show alert if server response is bad */}\r\n                <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n                    Something went wrong with your signup!\r\n                </Alert>\r\n\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Label htmlFor='name'>Client Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Client Name'\r\n                        name='name'\r\n                        onChange={handleInputChange}\r\n                        value={clientFormData.name}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type='invalid'>Client name is required!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Label htmlFor='email'>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Client email address'\r\n                        name='email'\r\n                        onChange={handleInputChange}\r\n                        value={clientFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group className='mb-3'>\r\n                    <Form.Label htmlFor='description'>Description</Form.Label>\r\n                    <Form.Control\r\n                        type='description'\r\n                        placeholder='Description'\r\n                        name='description'\r\n                        onChange={handleInputChange}\r\n                        value={clientFormData.description}\r\n                    />\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(clientFormData.name && clientFormData.email && clientFormData.description)}\r\n                    type='submit'\r\n                    variant='success'>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewClientForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}